apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"batch/v1","kind":"CronJob","metadata":{"annotations":{},"creationTimestamp":null,"name":"my-test-cronjob","namespace":"default"},"spec":{"jobTemplate":{"metadata":{"creationTimestamp":null,"name":"my-test-cronjob"},"spec":{"template":{"metadata":{"creationTimestamp":null},"spec":{"containers":[{"image":"my-app:dev","name":"my-test-cronjob","resources":{}}],"restartPolicy":"OnFailure"}}}},"schedule":"*/5 * * * *"},"status":{}}
  creationTimestamp: "2025-08-16T09:26:31Z"
  generation: 1
  name: my-test-cronjob
  namespace: default
  resourceVersion: "67690"
  uid: cd5fd1ae-8449-4b65-946f-ca1ef35c4766
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: my-test-cronjob
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - image: my-app:dev
            imagePullPolicy: IfNotPresent
            name: my-test-cronjob
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: '*/180 * * * *'
  successfulJobsHistoryLimit: 3
  suspend: false
status:
  lastScheduleTime: "2025-08-16T10:05:00Z"
  lastSuccessfulTime: "2025-08-16T10:05:31Z"
